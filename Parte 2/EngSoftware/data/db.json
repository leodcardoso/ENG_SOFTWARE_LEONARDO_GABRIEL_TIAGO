{
  "nextId": {
    "users": 5,
    "habits": 7,
    "tasks": 7,
    "challenges": 6,
    "achievements": 7,
    "notifications": 6,
    "docs": 1,
    "commands": 102,
    "auditLog": 202
  },
  "users": [
    {
      "id": 1
    },
    {
      "id": 2,
      "name": "Leonardo",
      "email": "leo@example.com",
      "role": "developer",
      "createdAt": "2025-10-23T09:05:00Z",
      "profile": {
        "avatar": null,
        "bio": "Backend / arquitetura",
        "locale": "pt-BR",
        "timezone": "America/Sao_Paulo"
      },
      "settings": {
        "notifications": true,
        "remindersDefault": "07:30",
        "privateByDefault": false
      },
      "friends": [
        1,
        4
      ],
      "stats": {
        "points": 310,
        "level": 3
      }
    },
    {
      "id": 3,
      "name": "Gabriel",
      "email": "gabriel@example.com",
      "role": "developer",
      "createdAt": "2025-10-23T09:10:00Z",
      "profile": {
        "avatar": null,
        "bio": "Frontend / gamificação",
        "locale": "pt-BR",
        "timezone": "America/Sao_Paulo"
      },
      "settings": {
        "notifications": true,
        "remindersDefault": "20:00",
        "privateByDefault": false
      },
      "friends": [
        1
      ],
      "stats": {
        "points": 295,
        "level": 3
      }
    },
    {
      "id": 4,
      "name": "Tiago",
      "email": "tiago@example.com",
      "role": "developer",
      "createdAt": "2025-10-23T09:15:00Z",
      "profile": {
        "avatar": null,
        "bio": "Padrões e testes",
        "locale": "pt-BR",
        "timezone": "America/Sao_Paulo"
      },
      "settings": {
        "notifications": true,
        "remindersDefault": "12:00",
        "privateByDefault": true
      },
      "friends": [
        2
      ],
      "stats": {
        "points": 260,
        "level": 2
      }
    },
    {
      "id": 5,
      "name": "Nome Teste",
      "email": "teste@exemplo.com",
      "passwordHash": "$2b$10$5AgR0/gMP8OSZapnOO6/t.uRS6tVCftMcOV5TkuZ4esVin8gMMLey",
      "role": "developer",
      "createdAt": "2025-10-25T16:35:16.153Z",
      "profile": {},
      "settings": {},
      "friends": [],
      "stats": {
        "points": 15,
        "level": 1
      }
    },
    {
      "id": 6,
      "name": "Tiago Bettanin",
      "email": "tiago@gmail.com",
      "passwordHash": "$2b$10$E5mA3mexHLpEef2svTToO.S4YyQG.ENja4ADxidGqv7nVnjEZYtzu",
      "role": "developer",
      "createdAt": "2025-10-26T00:06:04.424Z",
      "profile": {},
      "settings": {},
      "friends": [],
      "stats": {
        "points": 0,
        "level": 1
      }
    }
  ],
  "habits": [
    {
      "id": 1,
      "userId": 1,
      "title": "Meditar",
      "description": "Meditação guiada de 10 minutos",
      "frequency": "daily",
      "schedule": [
        "07:00"
      ],
      "reminders": [
        "07:00"
      ],
      "streak": 1,
      "bestStreak": 12,
      "lastCheckIn": "2025-10-25",
      "pointsPerCheckIn": 10,
      "active": true,
      "privacy": "friends",
      "createdAt": "2025-09-01T08:00:00Z",
      "jokerUsedDates": []
    },
    {
      "id": 2,
      "userId": 1,
      "title": "Ler 30 min",
      "description": "Leitura de livro técnico",
      "frequency": "daily",
      "schedule": [
        "21:00"
      ],
      "reminders": [
        "20:45"
      ],
      "streak": 2,
      "bestStreak": 7,
      "lastCheckIn": "2025-10-22",
      "pointsPerCheckIn": 8,
      "active": true,
      "privacy": "private",
      "createdAt": "2025-09-10T20:00:00Z",
      "jokerUsedDates": [
        "2025-10-10"
      ]
    },
    {
      "id": 3,
      "userId": 2,
      "title": "Academia",
      "description": "Treino de musculação",
      "frequency": "weekly",
      "schedule": [
        "Mon",
        "Wed",
        "Fri"
      ],
      "reminders": [
        "18:00"
      ],
      "streak": 0,
      "bestStreak": 5,
      "lastCheckIn": null,
      "pointsPerCheckIn": 15,
      "active": false,
      "privacy": "friends",
      "createdAt": "2025-08-15T18:00:00Z",
      "jokerUsedDates": []
    },
    {
      "id": 4,
      "userId": 3,
      "title": "Commit diário",
      "description": "Fazer ao menos 1 commit no projeto",
      "frequency": "daily",
      "schedule": [
        "23:00"
      ],
      "reminders": [
        "22:30"
      ],
      "streak": 3,
      "bestStreak": 10,
      "lastCheckIn": "2025-10-22",
      "pointsPerCheckIn": 5,
      "active": true,
      "privacy": "public",
      "createdAt": "2025-09-20T22:00:00Z",
      "jokerUsedDates": []
    },
    {
      "id": 5,
      "userId": 4,
      "title": "Revisar PRs",
      "description": "Revisar PRs abertos no repositório",
      "frequency": "weekly",
      "schedule": [
        "Thu"
      ],
      "reminders": [
        "10:00"
      ],
      "streak": 1,
      "bestStreak": 4,
      "lastCheckIn": "2025-10-16",
      "pointsPerCheckIn": 12,
      "active": true,
      "privacy": "friends",
      "createdAt": "2025-10-01T10:00:00Z",
      "jokerUsedDates": []
    }
  ],
  "tasks": [
    {
      "id": 1,
      "title": "Publicar resumo do plano de qualidade no README",
      "ownerId": 1,
      "category": "documentação",
      "status": "todo",
      "output": "docs/qualidade/Plano_de_Gestao_da_Qualidade.md",
      "createdAt": "2025-10-23T09:30:00Z"
    },
    {
      "id": 2,
      "title": "Criar ADRs (Decisões de arquitetura)",
      "ownerId": 2,
      "category": "arquitetura",
      "status": "todo",
      "output": "docs/arquitetura/Decisoes_de_Arquitetura.md",
      "createdAt": "2025-10-23T09:35:00Z"
    },
    {
      "id": 3,
      "title": "Diagramar padrões e mapear para código",
      "ownerId": 4,
      "category": "padrões",
      "status": "todo",
      "createdAt": "2025-10-23T09:40:00Z"
    },
    {
      "id": 4,
      "title": "Atualizar Trello com tarefas e responsáveis",
      "ownerId": 1,
      "category": "gestão",
      "status": "todo",
      "createdAt": "2025-10-23T09:45:00Z"
    },
    {
      "id": 5,
      "title": "Criar CHANGELOG.md",
      "ownerId": 1,
      "category": "gestão",
      "status": "todo",
      "createdAt": "2025-10-23T09:50:00Z"
    },
    {
      "id": 6,
      "title": "Gravar vídeo demo (<=30s)",
      "ownerId": 4,
      "category": "demonstração",
      "status": "todo",
      "output": "docs/demo/Demonstracao.pdf",
      "createdAt": "2025-10-23T09:55:00Z"
    }
  ],
  "challenges": [
    {
      "id": 1,
      "title": "Desafio 7 dias de meditação",
      "creatorId": 3,
      "participantIds": [
        1,
        3
      ],
      "startDate": "2025-10-20",
      "endDate": "2025-10-27",
      "goal": {
        "habitId": 1,
        "checksRequired": 7
      },
      "progress": {
        "1": 6,
        "3": 7
      },
      "createdAt": "2025-10-20T08:00:00Z"
    },
    {
      "id": 2,
      "title": "Semana do Commit",
      "creatorId": 3,
      "participantIds": [
        2,
        3
      ],
      "startDate": "2025-10-27",
      "endDate": "2025-11-03",
      "goal": {
        "habitId": 4,
        "checksRequired": 7
      },
      "progress": {
        "2": 0,
        "3": 1
      },
      "createdAt": "2025-10-22T12:00:00Z"
    },
    {
      "id": 3,
      "creatorId": 6,
      "title": "teste",
      "startDate": "2025-10-26",
      "endDate": "2025-12-29",
      "goal": {
        "habitId": 1,
        "checksRequired": 1
      },
      "participantIds": [
        2,
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T02:45:18.323Z",
      "progress": {}
    },
    {
      "id": 4,
      "creatorId": 6,
      "title": "testede criar desafio",
      "startDate": "2025-10-26",
      "endDate": "2025-12-29",
      "goal": {
        "habitId": 1,
        "checksRequired": 1
      },
      "participantIds": [
        2,
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T02:46:13.115Z",
      "progress": {}
    },
    {
      "id": 5,
      "creatorId": 6,
      "title": "MEditar",
      "startDate": "2025-10-26",
      "endDate": "2025-12-10",
      "goal": {
        "habitId": 1,
        "checksRequired": 7
      },
      "participantIds": [
        2,
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T03:24:00.924Z",
      "progress": {}
    },
    {
      "id": 6,
      "creatorId": 6,
      "title": "sdfasd",
      "startDate": "2025-10-26",
      "endDate": "2026-01-01",
      "goal": {
        "habitId": 1,
        "checksRequired": 3
      },
      "participantIds": [
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T03:37:23.627Z",
      "progress": {}
    },
    {
      "id": 3,
      "creatorId": 6,
      "title": "fsad",
      "startDate": "2025-10-26",
      "endDate": "2026-01-01",
      "goal": {
        "categoryTitle": "Leitura",
        "checksRequired": 1
      },
      "participantIds": [
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T05:35:48.981Z",
      "progress": {}
    },
    {
      "id": 4,
      "creatorId": 6,
      "title": "testes",
      "startDate": "2025-10-26",
      "endDate": "2026-01-01",
      "goal": {
        "categoryTitle": "Leitura",
        "checksRequired": 1
      },
      "participantIds": [
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T05:37:49.267Z",
      "progress": {}
    },
    {
      "id": 5,
      "creatorId": 6,
      "title": "pfv vai",
      "startDate": "2025-10-26",
      "endDate": "2026-01-01",
      "goal": {
        "categoryTitle": "Exercício",
        "checksRequired": 1
      },
      "participantIds": [
        1,
        6
      ],
      "privacy": "public",
      "createdAt": "2025-10-26T05:38:21.667Z",
      "progress": {}
    }
  ],
  "achievements": [
    {
      "id": 1,
      "key": "first_checkin",
      "title": "Primeiro check-in",
      "points": 5,
      "description": "Complete o primeiro check-in de hábito"
    },
    {
      "id": 2,
      "key": "7_day_streak",
      "title": "7 dias seguidos",
      "points": 50,
      "description": "Mantenha um streak de 7 dias"
    },
    {
      "id": 3,
      "key": "mentor",
      "title": "Mentor",
      "points": 100,
      "description": "Ajude um amigo a completar um hábito"
    },
    {
      "id": 4,
      "key": "commit_week",
      "title": "Semana de commits",
      "points": 30,
      "description": "Fazer commits todos os dias por uma semana"
    },
    {
      "id": 5,
      "key": "pr_reviewer",
      "title": "Revisor",
      "points": 20,
      "description": "Revisar 5 PRs"
    },
    {
      "id": 6,
      "key": "challenge_winner",
      "title": "Vencedor de desafio",
      "points": 80,
      "description": "Vencer um desafio entre participantes"
    }
  ],
  "userAchievements": [
    {
      "userId": 1,
      "achievementIds": [
        1
      ]
    },
    {
      "userId": 2,
      "achievementIds": [
        1,
        4
      ]
    },
    {
      "userId": 3,
      "achievementIds": [
        1,
        2,
        4
      ]
    },
    {
      "userId": 4,
      "achievementIds": []
    },
    {
      "userId": 5,
      "achievementIds": [
        1
      ]
    }
  ],
  "notifications": [
    {
      "id": 1,
      "userId": 1,
      "type": "reminder",
      "title": "Lembrete: Meditar",
      "body": "Hora de meditar às 07:00",
      "read": false,
      "createdAt": "2025-10-23T06:50:00Z"
    },
    {
      "id": 2,
      "userId": 2,
      "type": "task",
      "title": "Nova tarefa atribuída",
      "body": "Criar ADRs foi atribuída a você",
      "read": false,
      "createdAt": "2025-10-23T09:36:00Z"
    },
    {
      "id": 3,
      "userId": 3,
      "type": "challenge",
      "title": "Desafio iniciado",
      "body": "Semana do Commit começa em 2025-10-27",
      "read": false,
      "createdAt": "2025-10-22T12:01:00Z"
    },
    {
      "id": 4,
      "userId": 1,
      "type": "social",
      "title": "Novo amigo",
      "body": "Leonardo aceitou sua solicitação",
      "read": true,
      "createdAt": "2025-10-21T14:00:00Z"
    },
    {
      "id": 5,
      "userId": 4,
      "type": "reminder",
      "title": "Revisar PRs",
      "body": "Lembrete semanal para revisar PRs",
      "read": false,
      "createdAt": "2025-10-23T09:00:00Z"
    }
  ],
  "docs": [],
  "docsMetaPath": "docs/metadata.json",
  "commands": [
    {
      "id": 1,
      "userId": 1,
      "type": "checkin",
      "target": {
        "type": "habit",
        "id": 1
      },
      "timestamp": "2025-10-23T07:01:00Z",
      "pointsDelta": 10,
      "metadata": {
        "source": "mobile",
        "note": "10min session"
      },
      "undone": false
    },
    {
      "id": 101,
      "timestamp": "2025-10-25T19:25:04.291Z",
      "userId": 5,
      "type": "checkin",
      "target": {
        "type": "habit",
        "id": 1
      },
      "metadata": {
        "source": "postman_test"
      },
      "pointsDelta": 10,
      "undone": false
    }
  ],
  "auditLog": [
    {
      "id": 201,
      "entity": "commands",
      "entityId": 1,
      "action": "create",
      "userId": 1,
      "timestamp": "2025-10-23T07:01:01Z",
      "data": {
        "type": "checkin",
        "target": {
          "type": "habit",
          "id": 1
        },
        "pointsDelta": 10
      }
    },
    {
      "id": 201,
      "entity": "commands",
      "entityId": 101,
      "action": "create",
      "userId": 5,
      "timestamp": "2025-10-25T19:25:04.292Z",
      "data": {
        "type": "checkin",
        "target": {
          "type": "habit",
          "id": 1
        },
        "pointsDelta": 10,
        "metadata": {
          "source": "postman_test"
        }
      }
    }
  ],
  "patterns": [
    {
      "name": "Observer",
      "appliedIn": [
        {
          "module": "services/notificationService.js",
          "description": "Observes habit check-ins and emits reminder/achievement notifications",
          "codeReference": "services/notificationService.js:observeHabitCheckin()",
          "diagramRef": "docs/padroes/Observer.svg"
        }
      ]
    },
    {
      "name": "Strategy",
      "appliedIn": [
        {
          "module": "services/scoringService.js",
          "description": "Different scoring strategies (daily, weekly, challenge) selected per habit/context",
          "codeReference": "services/scoringService.js:selectStrategy()",
          "diagramRef": "docs/padroes/Strategy.svg"
        }
      ]
    },
    {
      "name": "Command",
      "appliedIn": [
        {
          "module": "services/commandService.js",
          "description": "Encapsulates user actions (check-in, joker, revert) as commands persisted for audit/undo",
          "codeReference": "services/commandService.js:executeCommand()",
          "diagramRef": "docs/padroes/Command.svg"
        }
      ]
    }
  ],
  "flows": [
    {
      "id": "create_habit",
      "title": "Criar hábito (fluxo mínimo)",
      "steps": [
        "User opens 'create habit' screen",
        "User fills title, frequency, reminders, privacy",
        "Client calls POST /habits (userId + payload)",
        "Server validates and creates habit, returns habit with id",
        "Client shows habit in user's list"
      ]
    },
    {
      "id": "checkin_daily",
      "title": "Check-in diário (fluxo mínimo)",
      "steps": [
        "User taps 'check-in' on a habit",
        "Client calls POST /commands { type: 'checkin', userId, target: { habitId } }",
        "CommandService validates (not duplicate for period) and persists command",
        "ScoringService applies Strategy, updates user points and habit streak",
        "Observer emits notifications and achievement checks",
        "Client receives updated habit and user stats"
      ]
    },
    {
      "id": "use_joker",
      "title": "Usar coringa (fluxo mínimo)",
      "steps": [
        "User requests to use joker for a habit (UI confirmation)",
        "Client calls POST /commands { type: 'joker_use', userId, target: { habitId }, metadata }",
        "CommandService validates joker availability (per-user/quota) and persists command",
        "Habit.jokerUsedDates updated and streak logic adjusted without points",
        "AuditLog records the action"
      ]
    },
    {
      "id": "revert_action",
      "title": "Reverter ação (undo)",
      "steps": [
        "User opens history and selects a command to revert",
        "Client calls POST /commands { type: 'revert', userId, target: { commandId }, metadata }",
        "CommandService verifies permissions and time-window, persists revert command",
        "System applies inverse operation (subtract points, rollback streak) and marks original command as undone",
        "AuditLog stores both actions for traceability"
      ]
    },
    {
      "id": "view_ranking_challenges",
      "title": "Ver ranking e desafios",
      "steps": [
        "Client requests GET /rankings or GET /challenges/:id/progress",
        "Server computes ranking usando ScoringService strategies e challenge progress",
        "Client displays leaderboard e challenge progress"
      ]
    }
  ]
}